The idea here is to use 2 variables( or arrays) to record the previous up and down value. 
If the current element is greater than the previous element, then the up value will be 1 + down[ i - 1].
Similarly, if the current element is lesser than the previous element, then the down value for this
element would be 1 + up[ i - 1 ]. At the end , we return the maximum of the up and down values.

Let us undestand this through an example :
[ 1 , 17 , 5 , 10 , 13 , 15 , 10 , 5 , 16 , 8] is our array in consideration.
We initialize two variables, up and down and set their value to 1 corresponding to position 0 of the array.
Now for position 1, as the element is greater than the previous element, up = down + 1 i.e 2 and down = 1.
Next for position 2, as 5 is lesser than the previous element, down = up + 1 or 3 and up = 2.
Next for position 3, as 10 is greater than the previous element, up = 4 and down = 3.
Now for position 4, as 13 is greater than 10, up = 4( down + 1) and down = 3.
Next as 15 is greater than 15, up = 4 and down = 3.
Next as 10 is lesser than 15, down = 5 and up = 4.
Next as 5 is lesser than 10, down = 5 and up = 4.
Again for element 16 at position 8, as 16 is greater than 5, up = 6 and down = 5.
At the end, as 8 is lesser than 16, down = 7 and up = 6.
The maximum of 7 and 6 is 7 and we return it as our answer.
